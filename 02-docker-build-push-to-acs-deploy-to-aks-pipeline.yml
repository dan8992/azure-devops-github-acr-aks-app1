# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '4ebde5c0-6752-4688-a2b6-9e070f9bac4c'
  imageRepository: 'app1nginxaks'
  containerRegistry: 'acrdemosf.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'acrdemosfe643-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: BuildAndDeploy
  displayName: Build and Deploy Stage
  jobs:
  - job: BuildAndDeploy
    displayName: Build and Deploy
    pool:
      vmImage: $(vmImageName)
    steps:
    # Build and push image to container registry
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

    # Upload manifests as artifact (optional, can remove if not needed)
    - upload: manifests
      artifact: manifests

    # Create imagePullSecret in Kubernetes
    - task: KubernetesManifest@0
      displayName: Create imagePullSecret
      inputs:
        action: createSecret
        secretName: $(imagePullSecret)
        dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

    # Deploy to Kubernetes cluster
    - task: KubernetesManifest@0
      displayName: Deploy to Kubernetes cluster
      inputs:
        action: deploy
        manifests: |
          $(Pipeline.Workspace)/manifests/deployment.yml
          $(Pipeline.Workspace)/manifests/service.yml
        imagePullSecrets: |
          $(imagePullSecret)
        containers: |
          $(containerRegistry)/$(imageRepository):$(tag)
